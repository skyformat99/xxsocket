<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- APPLICATION LYAER PROTOCOL AUTO GENERATOR DESCRIPTION FILE
Field Supported Attributes:
command_id,
length_specifier
present_condition
zlib: 1: compress message body use zlib, 0: no zlib used.
mode: 
    encode: generate encode code only,
    encodelua: generate encode c++ message to lua
    decodelua: generate decode lua table to c++ message.
    decode: generate decode only,
    all: generate all
    lua.encode: pure lua binary protocol
    lua.decode: pure lua binary protocol
    
c++ protocol header code header:

End User should implement: "obinarystream pcode_autog_begin_encode(uint16_t command_id);"
such as:
obinarystream pcode_autog_begin_encode(uint16_t command_id)
{
    messages::MsgHeader header;
    header.length = 0;
    header.command_id = command_id;
    header.version = 1;
    header.reserved = 0x5a5a;
    header.reserved2 = microtime();

    return header.encode();
}


-->
<protocol name="client" version="1.18" author="halx99" release_date="2018.12.2">

  <header desc="16 bytes header, unused for generator, on for description protocol">
    <field name="length" type="uint16_t" />
    <field name="command_id" type="uint16_t" />
    <field name="version"  type="uint16_t" />
    <field name="reserved" type="uint16_t" /> <!-- magic number For packet check, such as 0x5a5a-->
    <field name="reserved2" type="uint64_t" /> <!-- May be timestamp -->
  </header>

  <structures>
    
    <structure name="UserInfo">
      <field name="user_id" type="uint32_t" />
      <field name="user_name" type="std::string" />
      <field name="equip_id" type="uint32_t" />
      <field name="hero_id" type="uint32_t" />
      <field name="hero_lv" type="uint16_t" />
      <field name="hero_hp" type="uint32_t" />
      <field name="hero_mp" type="uint32_t" />
    </structure>
    
    <structure name="Extension">
      <field name="extension_type" type="uint8_t" />
      <field name="extension_data_length" type="uint16_t" />
      <field name="extension_data" type="uint8_t*" length_specifier="extension_data_length" />
    </structure>
    
  </structures>

  <messages>
    
    <message name="MsgHeader" is_header="1" >
      <field name="length" type="uint16_t" />
      <field name="command_id" type="uint16_t" />
      <field name="version"  type="uint16_t" />
      <field name="reserved" type="uint16_t" /> <!-- magic number For packet check, such as 0x5a5a-->
      <field name="reserved2" type="uint64_t" /> <!-- May be timestamp -->
    </message>
 
     <message name="MessageSimple1" command_id="CID_SIMPLE1 = 101" mode="lua.all">	<!-- 登陆请求 -->
      <field name="id" type="int8_t" />
      <field name="value1" type="uint16_t" />
      <field name="value2" type="int32_t" />
      <field name="value3" type="bool" />
      <field name="value4" type="float" />
      <field name="value6" type="double" />
      <field name="uname" type="std::string" />
      <field name="passwd" type="std::string" />
    </message>
    
    <!-- TSL v1.3 protocol 
    <message name="TLS_1_3_Header" is_header="1" >
      <field name="msg_type" type="uint8_t" />
      <field name="length" type="uint24_t" />
    </message>

    
    <message name="ClientHello" command_id="TLS_1_3_CLIENT_HELLO = 1" mode="lua.all">
      <field name="legacy_version" type="int16_t" value="0x0303" /> 
      <field name="random" type="uint8_t[32]" />
      <field name="legacy_session_id" type="uint8_t"  value="0" />
      <field name="cipher_suites_length" type="uint16_t" />
      <field name="cipher_suites" type="uint16_t*" length_specifier="cipher_suites_length"/>
      <field name="legacy_compression_methods_length" type="uint8_t" value="1" />
      <field name="legacy_compression_methods" type="uint8_t" value="0" />
      <field name="extensions_length" type="uint16_t" />
      <field name="extensions" type="Extension*" length_specifier="extensions_length"/>
    </message>
-->
  </messages>
  
</protocol>


